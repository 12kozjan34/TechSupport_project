// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using TechSupport.DAL.Models;

#nullable disable

namespace TechSupport.DAL.Migrations
{
    [DbContext(typeof(ProjektContext))]
    [Migration("20230912092645_AddColumnToKorisnikTableZaposlen")]
    partial class AddColumnToKorisnikTableZaposlen
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "7.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("TechSupport.DAL.Models.Korisnik", b =>
                {
                    b.Property<int>("KorisnikId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("KorisnikId"));

                    b.Property<bool>("Blocked")
                        .HasColumnType("bit");

                    b.Property<string>("Email")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("email");

                    b.Property<string>("Ime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("ime");

                    b.Property<string>("KorisnickoIme")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("korisnicko_ime");

                    b.Property<DateTime?>("LastLogIn")
                        .HasColumnType("datetime2");

                    b.Property<string>("Lozinka")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("lozinka");

                    b.Property<string>("Prezime")
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("prezime");

                    b.Property<string>("Slika")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("slika");

                    b.Property<int>("TipId")
                        .HasColumnType("int")
                        .HasColumnName("tip_id");

                    b.Property<bool>("Zaposlen")
                        .HasColumnType("bit");

                    b.HasKey("KorisnikId")
                        .HasName("PK__korisnik__B84D9F56E7BF3362");

                    b.HasIndex(new[] { "TipId" }, "fk_korisnik_tip_korisnika_idx");

                    b.ToTable("korisnik", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Odgovor", b =>
                {
                    b.Property<int>("OdgovorId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("odgovor_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("OdgovorId"));

                    b.Property<int>("ZaposlenikId")
                        .HasColumnType("int")
                        .HasColumnName("zaposlenik_id");

                    b.Property<DateTime>("DatumVrijemeOdgovora")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datum_vrijeme_odgovora");

                    b.Property<int>("PitanjeId")
                        .HasColumnType("int")
                        .HasColumnName("pitanje_id");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("tekst");

                    b.HasKey("OdgovorId", "ZaposlenikId")
                        .HasName("PK__odgovor__5C236DED66820873");

                    b.HasIndex(new[] { "ZaposlenikId" }, "fk_odgovor_dodijeljen1_idx");

                    b.HasIndex(new[] { "PitanjeId" }, "fk_odgovor_pitanje1_idx");

                    b.ToTable("odgovor", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Pitanje", b =>
                {
                    b.Property<int>("PitanjeId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("pitanje_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("PitanjeId"));

                    b.Property<DateTime>("DatumVrijemePitanja")
                        .HasPrecision(0)
                        .HasColumnType("datetime2(0)")
                        .HasColumnName("datum_vrijeme_pitanja");

                    b.Property<string>("Naslov")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("naslov");

                    b.Property<bool>("Odgovoreno")
                        .HasColumnType("bit");

                    b.Property<string>("Slika")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("slika");

                    b.Property<string>("Tekst")
                        .IsRequired()
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("tekst");

                    b.Property<int>("TvrtkaId")
                        .HasColumnType("int")
                        .HasColumnName("tvrtka_id");

                    b.Property<string>("Video")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("video");

                    b.HasKey("PitanjeId")
                        .HasName("PK__pitanje__21342259F3BEAE1F");

                    b.HasIndex(new[] { "TvrtkaId" }, "fk_pitanje_kategorija1_idx");

                    b.ToTable("pitanje", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.TipKorisnika", b =>
                {
                    b.Property<int>("TipId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tip_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TipId"));

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(20)
                        .IsUnicode(false)
                        .HasColumnType("varchar(20)")
                        .HasColumnName("naziv");

                    b.HasKey("TipId")
                        .HasName("PK__tip_kori__377877B261B41FCB");

                    b.ToTable("tip_korisnika", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Tvrtka", b =>
                {
                    b.Property<int>("TvrtkaId")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("int")
                        .HasColumnName("tvrtka_id");

                    SqlServerPropertyBuilderExtensions.UseIdentityColumn(b.Property<int>("TvrtkaId"));

                    b.Property<int>("BrojZaposlenika")
                        .HasColumnType("int")
                        .HasColumnName("broj_zaposlenika");

                    b.Property<int>("ModeratorId")
                        .HasColumnType("int")
                        .HasColumnName("moderator_id");

                    b.Property<string>("Naziv")
                        .IsRequired()
                        .HasMaxLength(50)
                        .IsUnicode(false)
                        .HasColumnType("varchar(50)")
                        .HasColumnName("naziv");

                    b.Property<string>("Opis")
                        .IsUnicode(false)
                        .HasColumnType("varchar(max)")
                        .HasColumnName("opis");

                    b.Property<int>("PreostaliOdgovori")
                        .HasColumnType("int")
                        .HasColumnName("preostaliOdgovori");

                    b.Property<short>("Zahtjev")
                        .HasColumnType("smallint")
                        .HasColumnName("zahtjev");

                    b.HasKey("TvrtkaId")
                        .HasName("PK__tvrtka__4CCB974726618A19");

                    b.HasIndex(new[] { "ModeratorId" }, "fk_kategorija_korisnik1_idx");

                    b.ToTable("tvrtka", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Zaposlenik", b =>
                {
                    b.Property<int>("ZaposlenikId")
                        .HasColumnType("int")
                        .HasColumnName("zaposlenik_id");

                    b.Property<int>("KorisnikId")
                        .HasColumnType("int")
                        .HasColumnName("korisnik_id");

                    b.Property<int>("TvrtkaId")
                        .HasColumnType("int")
                        .HasColumnName("tvrtka_id");

                    b.HasKey("ZaposlenikId")
                        .HasName("PK__zaposlen__2C86153D326473CD");

                    b.HasIndex(new[] { "KorisnikId" }, "fk_tvrtka_has_korisnik_korisnik1_idx");

                    b.HasIndex(new[] { "TvrtkaId" }, "fk_tvrtka_has_korisnik_tvrtka1_idx");

                    b.ToTable("zaposlenik", "ePodrska");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Korisnik", b =>
                {
                    b.HasOne("TechSupport.DAL.Models.TipKorisnika", "Tip")
                        .WithMany("Korisniks")
                        .HasForeignKey("TipId")
                        .IsRequired()
                        .HasConstraintName("fk_korisnik_tip_korisnika");

                    b.Navigation("Tip");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Odgovor", b =>
                {
                    b.HasOne("TechSupport.DAL.Models.Pitanje", "Pitanje")
                        .WithMany("Odgovors")
                        .HasForeignKey("PitanjeId")
                        .IsRequired()
                        .HasConstraintName("fk_odgovor_pitanje1");

                    b.HasOne("TechSupport.DAL.Models.Zaposlenik", "Zaposlenik")
                        .WithMany("Odgovors")
                        .HasForeignKey("ZaposlenikId")
                        .IsRequired()
                        .HasConstraintName("fk_odgovor_dodijeljen1");

                    b.Navigation("Pitanje");

                    b.Navigation("Zaposlenik");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Pitanje", b =>
                {
                    b.HasOne("TechSupport.DAL.Models.Tvrtka", "Tvrtka")
                        .WithMany("Pitanjes")
                        .HasForeignKey("TvrtkaId")
                        .IsRequired()
                        .HasConstraintName("FK_Tvrtka1");

                    b.Navigation("Tvrtka");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Tvrtka", b =>
                {
                    b.HasOne("TechSupport.DAL.Models.Korisnik", "Moderator")
                        .WithMany("Tvrtkas")
                        .HasForeignKey("ModeratorId")
                        .IsRequired()
                        .HasConstraintName("fk_kategorija_korisnik1");

                    b.Navigation("Moderator");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Zaposlenik", b =>
                {
                    b.HasOne("TechSupport.DAL.Models.Korisnik", "Korisnik")
                        .WithMany("Zaposleniks")
                        .HasForeignKey("KorisnikId")
                        .IsRequired()
                        .HasConstraintName("fk_tvrtka_has_korisnik_korisnik1");

                    b.HasOne("TechSupport.DAL.Models.Tvrtka", "Tvrtka")
                        .WithMany("Zaposleniks")
                        .HasForeignKey("TvrtkaId")
                        .IsRequired()
                        .HasConstraintName("fk_tvrtka_has_korisnik_tvrtka1");

                    b.Navigation("Korisnik");

                    b.Navigation("Tvrtka");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Korisnik", b =>
                {
                    b.Navigation("Tvrtkas");

                    b.Navigation("Zaposleniks");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Pitanje", b =>
                {
                    b.Navigation("Odgovors");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.TipKorisnika", b =>
                {
                    b.Navigation("Korisniks");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Tvrtka", b =>
                {
                    b.Navigation("Pitanjes");

                    b.Navigation("Zaposleniks");
                });

            modelBuilder.Entity("TechSupport.DAL.Models.Zaposlenik", b =>
                {
                    b.Navigation("Odgovors");
                });
#pragma warning restore 612, 618
        }
    }
}
